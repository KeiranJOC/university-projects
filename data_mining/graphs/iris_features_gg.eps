%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 218 198
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, October 18, 2020 at 5:30:50 PM Australian Eastern Daylight Time
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
218 198 setpagesize
0 0 0 0 setmargins
0 0 setorigin
218 198 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
218.000 0.00000 l
218.000 198.000 l
0.00000 198.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
218.000 0.00000 l
218.000 198.000 l
0.00000 198.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 218 198 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 41.0000 15.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-41.0000 -15.0000 m
177.000 -15.0000 l
177.000 183.000 l
-41.0000 183.000 l
-41.0000 -15.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 41.0000 15.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 41.0000 15.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 41.0000 15.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .800000 0.00000 RG
newpath
101.424 137.924 m
131.424 137.924 l
131.424 167.924 l
101.424 167.924 l
101.424 137.924 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
101.424 137.924 m
131.424 137.924 l
131.424 167.924 l
101.424 167.924 l
101.424 137.924 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
73.9424 154.872 m
75.0049 154.779 l
75.0570 155.216 75.1768 155.570 75.3643 155.841  c
75.5518 156.112 75.8382 156.336 76.2236 156.513  c
76.6195 156.680 77.0622 156.763 77.5518 156.763  c
77.9788 156.763 78.3590 156.700 78.6924 156.575  c
79.0257 156.440 79.2705 156.263 79.4268 156.044  c
79.5934 155.815 79.6768 155.570 79.6768 155.310  c
79.6768 155.039 79.5986 154.805 79.4424 154.607  c
79.2861 154.398 79.0309 154.226 78.6768 154.091  c
78.4372 153.997 77.9215 153.857 77.1299 153.669  c
76.3486 153.482 75.8018 153.305 75.4893 153.138  c
75.0726 152.919 74.7653 152.654 74.5674 152.341  c
74.3695 152.018 74.2705 151.659 74.2705 151.263  c
74.2705 150.836 74.3903 150.435 74.6299 150.060  c
74.8799 149.674 75.2393 149.388 75.7080 149.200  c
76.1872 149.003 76.7132 148.904 77.2861 148.904  c
77.9215 148.904 78.4840 149.008 78.9736 149.216  c
79.4632 149.414 79.8382 149.716 80.0986 150.122  c
80.3590 150.518 80.4997 150.966 80.5205 151.466  c
79.4268 151.544 l
79.3643 151.003 79.1611 150.596 78.8174 150.325  c
78.4840 150.044 77.9893 149.904 77.3330 149.904  c
76.6455 149.904 76.1455 150.029 75.8330 150.279  c
75.5205 150.529 75.3643 150.831 75.3643 151.185  c
75.3643 151.497 75.4736 151.753 75.6924 151.950  c
75.9111 152.148 76.4788 152.351 77.3955 152.560  c
78.3226 152.768 78.9580 152.950 79.3018 153.107  c
79.8018 153.346 80.1715 153.643 80.4111 153.997  c
80.6507 154.341 80.7705 154.747 80.7705 155.216  c
80.7705 155.674 80.6403 156.107 80.3799 156.513  c
80.1195 156.909 79.7445 157.221 79.2549 157.450  c
78.7653 157.669 78.2132 157.779 77.5986 157.779  c
76.8174 157.779 76.1611 157.669 75.6299 157.450  c
75.1090 157.221 74.6976 156.878 74.3955 156.419  c
74.1038 155.961 73.9528 155.445 73.9424 154.872  c
h
86.4463 155.638 m
87.5400 155.763 l
87.3734 156.398 87.0557 156.893 86.5869 157.247  c
86.1182 157.601 85.5244 157.779 84.8057 157.779  c
83.8994 157.779 83.1754 157.497 82.6338 156.935  c
82.1025 156.372 81.8369 155.586 81.8369 154.575  c
81.8369 153.534 82.1077 152.726 82.6494 152.154  c
83.1911 151.570 83.8890 151.279 84.7432 151.279  c
85.5765 151.279 86.2536 151.560 86.7744 152.122  c
87.3057 152.685 87.5713 153.482 87.5713 154.513  c
87.5713 154.575 87.5713 154.669 87.5713 154.794  c
82.9307 154.794 l
82.9723 155.482 83.1650 156.008 83.5088 156.372  c
83.8525 156.726 84.2848 156.904 84.8057 156.904  c
85.1911 156.904 85.5192 156.805 85.7900 156.607  c
86.0713 156.398 86.2900 156.075 86.4463 155.638  c
h
82.9932 153.935 m
86.4619 153.935 l
86.4202 153.404 86.2900 153.008 86.0713 152.747  c
85.7275 152.341 85.2900 152.138 84.7588 152.138  c
84.2692 152.138 83.8577 152.299 83.5244 152.622  c
83.2015 152.945 83.0244 153.383 82.9932 153.935  c
h
88.8701 160.029 m
88.8701 151.419 l
89.8232 151.419 l
89.8232 152.216 l
90.0524 151.904 90.3076 151.669 90.5889 151.513  c
90.8805 151.357 91.2295 151.279 91.6357 151.279  c
92.1670 151.279 92.6357 151.414 93.0420 151.685  c
93.4482 151.956 93.7503 152.341 93.9482 152.841  c
94.1566 153.341 94.2607 153.888 94.2607 154.482  c
94.2607 155.117 94.1462 155.690 93.9170 156.200  c
93.6982 156.711 93.3701 157.101 92.9326 157.372  c
92.4951 157.643 92.0368 157.779 91.5576 157.779  c
91.2034 157.779 90.8857 157.706 90.6045 157.560  c
90.3232 157.404 90.0941 157.216 89.9170 156.997  c
89.9170 160.029 l
88.8701 160.029 l
h
89.8232 154.560 m
89.8232 155.362 89.9847 155.956 90.3076 156.341  c
90.6305 156.716 91.0212 156.904 91.4795 156.904  c
91.9482 156.904 92.3493 156.706 92.6826 156.310  c
93.0159 155.914 93.1826 155.299 93.1826 154.466  c
93.1826 153.674 93.0212 153.086 92.6982 152.700  c
92.3753 152.305 91.9847 152.107 91.5264 152.107  c
91.0784 152.107 90.6826 152.315 90.3389 152.732  c
89.9951 153.148 89.8232 153.758 89.8232 154.560  c
h
99.6064 156.872 m
99.2106 157.206 98.8304 157.440 98.4658 157.575  c
98.1116 157.711 97.7262 157.779 97.3096 157.779  c
96.6221 157.779 96.0960 157.612 95.7314 157.279  c
95.3669 156.945 95.1846 156.518 95.1846 155.997  c
95.1846 155.695 95.2523 155.419 95.3877 155.169  c
95.5231 154.909 95.7054 154.706 95.9346 154.560  c
96.1637 154.404 96.4189 154.289 96.7002 154.216  c
96.8981 154.154 97.2106 154.096 97.6377 154.044  c
98.4814 153.950 99.1064 153.831 99.5127 153.685  c
99.5127 153.539 99.5127 153.450 99.5127 153.419  c
99.5127 152.982 99.4137 152.674 99.2158 152.497  c
98.9450 152.268 98.5439 152.154 98.0127 152.154  c
97.5231 152.154 97.1585 152.242 96.9189 152.419  c
96.6794 152.586 96.5023 152.888 96.3877 153.325  c
95.3564 153.185 l
95.4502 152.747 95.6064 152.393 95.8252 152.122  c
96.0439 151.851 96.3564 151.643 96.7627 151.497  c
97.1689 151.351 97.6377 151.279 98.1689 151.279  c
98.7002 151.279 99.1325 151.341 99.4658 151.466  c
99.7991 151.591 100.044 151.747 100.200 151.935  c
100.356 152.122 100.466 152.362 100.528 152.654  c
100.560 152.831 100.575 153.154 100.575 153.622  c
100.575 155.029 l
100.575 156.008 100.596 156.628 100.638 156.888  c
100.690 157.148 100.784 157.398 100.919 157.638  c
99.8096 157.638 l
99.7054 157.419 99.6377 157.164 99.6064 156.872  c
h
99.5127 154.513 m
99.1273 154.669 98.5544 154.805 97.7939 154.919  c
97.3564 154.982 97.0491 155.055 96.8721 155.138  c
96.6950 155.211 96.5544 155.320 96.4502 155.466  c
96.3564 155.612 96.3096 155.779 96.3096 155.966  c
96.3096 156.247 96.4137 156.482 96.6221 156.669  c
96.8408 156.857 97.1533 156.950 97.5596 156.950  c
97.9658 156.950 98.3252 156.862 98.6377 156.685  c
98.9606 156.508 99.1950 156.263 99.3408 155.950  c
99.4554 155.711 99.5127 155.362 99.5127 154.904  c
99.5127 154.513 l
h
102.187 157.638 m
102.187 149.044 l
103.249 149.044 l
103.249 157.638 l
102.187 157.638 l
h
104.962 157.638 m
104.962 149.044 l
106.103 149.044 l
106.103 156.622 l
110.337 156.622 l
110.337 157.638 l
104.962 157.638 l
h
115.808 155.638 m
116.901 155.763 l
116.735 156.398 116.417 156.893 115.948 157.247  c
115.479 157.601 114.886 157.779 114.167 157.779  c
113.261 157.779 112.537 157.497 111.995 156.935  c
111.464 156.372 111.198 155.586 111.198 154.575  c
111.198 153.534 111.469 152.726 112.011 152.154  c
112.552 151.570 113.250 151.279 114.104 151.279  c
114.938 151.279 115.615 151.560 116.136 152.122  c
116.667 152.685 116.933 153.482 116.933 154.513  c
116.933 154.575 116.933 154.669 116.933 154.794  c
112.292 154.794 l
112.334 155.482 112.526 156.008 112.870 156.372  c
113.214 156.726 113.646 156.904 114.167 156.904  c
114.552 156.904 114.881 156.805 115.151 156.607  c
115.433 156.398 115.651 156.075 115.808 155.638  c
h
112.354 153.935 m
115.823 153.935 l
115.782 153.404 115.651 153.008 115.433 152.747  c
115.089 152.341 114.651 152.138 114.120 152.138  c
113.631 152.138 113.219 152.299 112.886 152.622  c
112.563 152.945 112.386 153.383 112.354 153.935  c
h
118.231 157.638 m
118.231 151.419 l
119.169 151.419 l
119.169 152.294 l
119.627 151.617 120.289 151.279 121.153 151.279  c
121.528 151.279 121.872 151.346 122.185 151.482  c
122.507 151.617 122.747 151.794 122.903 152.013  c
123.060 152.232 123.169 152.487 123.231 152.779  c
123.263 152.976 123.278 153.320 123.278 153.810  c
123.278 157.638 l
122.231 157.638 l
122.231 153.857 l
122.231 153.419 122.190 153.096 122.106 152.888  c
122.023 152.680 121.877 152.513 121.669 152.388  c
121.461 152.253 121.216 152.185 120.935 152.185  c
120.487 152.185 120.096 152.331 119.763 152.622  c
119.440 152.904 119.278 153.440 119.278 154.232  c
119.278 157.638 l
118.231 157.638 l
h
124.702 158.154 m
125.733 158.310 l
125.775 158.622 125.895 158.851 126.093 158.997  c
126.353 159.195 126.707 159.294 127.155 159.294  c
127.645 159.294 128.020 159.195 128.280 158.997  c
128.551 158.799 128.733 158.529 128.827 158.185  c
128.890 157.966 128.916 157.513 128.905 156.825  c
128.447 157.367 127.874 157.638 127.187 157.638  c
126.332 157.638 125.671 157.331 125.202 156.716  c
124.733 156.091 124.499 155.351 124.499 154.497  c
124.499 153.904 124.603 153.357 124.812 152.857  c
125.030 152.346 125.343 151.956 125.749 151.685  c
126.155 151.414 126.634 151.279 127.187 151.279  c
127.926 151.279 128.535 151.575 129.015 152.169  c
129.015 151.419 l
129.983 151.419 l
129.983 156.794 l
129.983 157.763 129.884 158.450 129.687 158.857  c
129.489 159.263 129.176 159.581 128.749 159.810  c
128.322 160.049 127.796 160.169 127.171 160.169  c
126.431 160.169 125.832 160.003 125.374 159.669  c
124.916 159.336 124.692 158.831 124.702 158.154  c
h
125.577 154.419 m
125.577 155.232 125.739 155.825 126.062 156.200  c
126.384 156.575 126.791 156.763 127.280 156.763  c
127.770 156.763 128.176 156.575 128.499 156.200  c
128.832 155.825 128.999 155.242 128.999 154.450  c
128.999 153.690 128.827 153.117 128.483 152.732  c
128.150 152.346 127.744 152.154 127.265 152.154  c
126.796 152.154 126.395 152.346 126.062 152.732  c
125.739 153.107 125.577 153.669 125.577 154.419  c
h
133.876 156.700 m
134.032 157.622 l
133.730 157.685 133.465 157.716 133.235 157.716  c
132.850 157.716 132.553 157.659 132.345 157.544  c
132.136 157.419 131.985 157.258 131.892 157.060  c
131.808 156.862 131.767 156.445 131.767 155.810  c
131.767 152.232 l
131.001 152.232 l
131.001 151.419 l
131.767 151.419 l
131.767 149.872 l
132.813 149.247 l
132.813 151.419 l
133.876 151.419 l
133.876 152.232 l
132.813 152.232 l
132.813 155.872 l
132.813 156.174 132.829 156.367 132.860 156.450  c
132.902 156.534 132.965 156.601 133.048 156.654  c
133.131 156.706 133.251 156.732 133.407 156.732  c
133.532 156.732 133.688 156.721 133.876 156.700  c
h
134.913 157.638 m
134.913 149.044 l
135.960 149.044 l
135.960 152.122 l
136.450 151.560 137.069 151.279 137.819 151.279  c
138.288 151.279 138.689 151.372 139.022 151.560  c
139.366 151.737 139.611 151.987 139.757 152.310  c
139.903 152.622 139.976 153.086 139.976 153.700  c
139.976 157.638 l
138.929 157.638 l
138.929 153.700 l
138.929 153.169 138.814 152.784 138.585 152.544  c
138.356 152.305 138.033 152.185 137.616 152.185  c
137.304 152.185 137.007 152.268 136.726 152.435  c
136.455 152.591 136.257 152.810 136.132 153.091  c
136.017 153.362 135.960 153.742 135.960 154.232  c
135.960 157.638 l
134.913 157.638 l
h
147.853 154.622 m
148.978 154.919 l
148.738 155.846 148.311 156.555 147.696 157.044  c
147.082 157.534 146.326 157.779 145.431 157.779  c
144.504 157.779 143.748 157.591 143.165 157.216  c
142.582 156.841 142.139 156.299 141.837 155.591  c
141.535 154.872 141.384 154.101 141.384 153.279  c
141.384 152.383 141.556 151.601 141.899 150.935  c
142.243 150.268 142.728 149.763 143.353 149.419  c
143.988 149.075 144.686 148.904 145.446 148.904  c
146.300 148.904 147.019 149.122 147.603 149.560  c
148.196 149.997 148.608 150.612 148.837 151.404  c
147.712 151.669 l
147.514 151.044 147.222 150.591 146.837 150.310  c
146.462 150.018 145.988 149.872 145.415 149.872  c
144.759 149.872 144.207 150.034 143.759 150.357  c
143.321 150.669 143.009 151.091 142.821 151.622  c
142.644 152.154 142.556 152.706 142.556 153.279  c
142.556 154.008 142.660 154.643 142.868 155.185  c
143.087 155.726 143.420 156.133 143.868 156.404  c
144.316 156.674 144.806 156.810 145.337 156.810  c
145.972 156.810 146.509 156.628 146.946 156.263  c
147.394 155.898 147.696 155.351 147.853 154.622  c
h
150.253 157.638 m
150.253 151.419 l
151.190 151.419 l
151.190 152.294 l
151.388 151.982 151.649 151.737 151.972 151.560  c
152.295 151.372 152.664 151.279 153.081 151.279  c
153.539 151.279 153.914 151.372 154.206 151.560  c
154.508 151.747 154.716 152.013 154.831 152.357  c
155.331 151.638 155.972 151.279 156.753 151.279  c
157.378 151.279 157.852 151.450 158.175 151.794  c
158.508 152.128 158.675 152.654 158.675 153.372  c
158.675 157.638 l
157.628 157.638 l
157.628 153.716 l
157.628 153.299 157.591 152.997 157.519 152.810  c
157.456 152.622 157.336 152.471 157.159 152.357  c
156.982 152.242 156.769 152.185 156.519 152.185  c
156.081 152.185 155.716 152.331 155.425 152.622  c
155.144 152.914 155.003 153.383 155.003 154.029  c
155.003 157.638 l
153.940 157.638 l
153.940 153.591 l
153.940 153.122 153.852 152.773 153.675 152.544  c
153.508 152.305 153.232 152.185 152.847 152.185  c
152.545 152.185 152.269 152.263 152.019 152.419  c
151.769 152.575 151.586 152.805 151.472 153.107  c
151.357 153.409 151.300 153.841 151.300 154.404  c
151.300 157.638 l
150.253 157.638 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
14.6449 92.4264 m
44.6449 92.4264 l
44.6449 122.426 l
14.6449 122.426 l
14.6449 92.4264 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
14.6449 92.4264 m
44.6449 92.4264 l
44.6449 122.426 l
14.6449 122.426 l
14.6449 92.4264 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-9.82191 109.375 m
-8.75941 109.281 l
-8.70733 109.718 -8.58754 110.073 -8.40004 110.343  c
-8.21254 110.614 -7.92608 110.838 -7.54066 111.015  c
-7.14483 111.182 -6.70212 111.265 -6.21254 111.265  c
-5.78546 111.265 -5.40525 111.203 -5.07191 111.078  c
-4.73858 110.942 -4.49379 110.765 -4.33754 110.546  c
-4.17087 110.317 -4.08754 110.073 -4.08754 109.812  c
-4.08754 109.541 -4.16566 109.307 -4.32191 109.109  c
-4.47816 108.901 -4.73337 108.729 -5.08754 108.593  c
-5.32712 108.500 -5.84275 108.359 -6.63441 108.171  c
-7.41566 107.984 -7.96254 107.807 -8.27504 107.640  c
-8.69171 107.421 -8.99900 107.156 -9.19691 106.843  c
-9.39483 106.520 -9.49379 106.161 -9.49379 105.765  c
-9.49379 105.338 -9.37400 104.937 -9.13441 104.562  c
-8.88441 104.177 -8.52504 103.890 -8.05629 103.703  c
-7.57712 103.505 -7.05108 103.406 -6.47816 103.406  c
-5.84275 103.406 -5.28025 103.510 -4.79066 103.718  c
-4.30108 103.916 -3.92608 104.218 -3.66566 104.625  c
-3.40525 105.020 -3.26462 105.468 -3.24379 105.968  c
-4.33754 106.046 l
-4.40004 105.505 -4.60316 105.099 -4.94691 104.828  c
-5.28025 104.546 -5.77504 104.406 -6.43129 104.406  c
-7.11879 104.406 -7.61879 104.531 -7.93129 104.781  c
-8.24379 105.031 -8.40004 105.333 -8.40004 105.687  c
-8.40004 106.000 -8.29066 106.255 -8.07191 106.453  c
-7.85316 106.651 -7.28546 106.854 -6.36879 107.062  c
-5.44171 107.270 -4.80629 107.453 -4.46254 107.609  c
-3.96254 107.849 -3.59275 108.145 -3.35316 108.500  c
-3.11358 108.843 -2.99379 109.250 -2.99379 109.718  c
-2.99379 110.177 -3.12400 110.609 -3.38441 111.015  c
-3.64483 111.411 -4.01983 111.724 -4.50941 111.953  c
-4.99900 112.171 -5.55108 112.281 -6.16566 112.281  c
-6.94691 112.281 -7.60316 112.171 -8.13441 111.953  c
-8.65525 111.724 -9.06671 111.380 -9.36879 110.921  c
-9.66046 110.463 -9.81150 109.948 -9.82191 109.375  c
h
2.68199 110.140 m
3.77574 110.265 l
3.60908 110.901 3.29137 111.395 2.82262 111.750  c
2.35387 112.104 1.76012 112.281 1.04137 112.281  c
.135118 112.281 -.588841 112.000 -1.13051 111.437  c
-1.66176 110.875 -1.92738 110.088 -1.92738 109.078  c
-1.92738 108.036 -1.65655 107.229 -1.11488 106.656  c
-.573216 106.073 .124701 105.781 .978868 105.781  c
1.81220 105.781 2.48928 106.062 3.01012 106.625  c
3.54137 107.187 3.80699 107.984 3.80699 109.015  c
3.80699 109.078 3.80699 109.171 3.80699 109.296  c
-.833632 109.296 l
-.791966 109.984 -.599257 110.510 -.255507 110.875  c
.0882425 111.229 .520534 111.406 1.04137 111.406  c
1.42678 111.406 1.75491 111.307 2.02574 111.109  c
2.30699 110.901 2.52574 110.578 2.68199 110.140  c
h
-.771132 108.437 m
2.69762 108.437 l
2.65595 107.906 2.52574 107.510 2.30699 107.250  c
1.96324 106.843 1.52574 106.640 .994493 106.640  c
.504909 106.640 .0934509 106.802 -.239882 107.125  c
-.562799 107.448 -.739882 107.885 -.771132 108.437  c
h
5.10582 114.531 m
5.10582 105.921 l
6.05895 105.921 l
6.05895 106.718 l
6.28811 106.406 6.54332 106.171 6.82457 106.015  c
7.11624 105.859 7.46520 105.781 7.87145 105.781  c
8.40270 105.781 8.87145 105.916 9.27770 106.187  c
9.68395 106.458 9.98603 106.843 10.1839 107.343  c
10.3923 107.843 10.4964 108.390 10.4964 108.984  c
10.4964 109.619 10.3819 110.192 10.1527 110.703  c
9.93395 111.213 9.60582 111.604 9.16832 111.875  c
8.73082 112.145 8.27249 112.281 7.79332 112.281  c
7.43915 112.281 7.12145 112.208 6.84020 112.062  c
6.55895 111.906 6.32978 111.718 6.15270 111.500  c
6.15270 114.531 l
5.10582 114.531 l
h
6.05895 109.062 m
6.05895 109.864 6.22040 110.458 6.54332 110.843  c
6.86624 111.218 7.25686 111.406 7.71520 111.406  c
8.18395 111.406 8.58499 111.208 8.91832 110.812  c
9.25165 110.416 9.41832 109.802 9.41832 108.968  c
9.41832 108.177 9.25686 107.588 8.93395 107.203  c
8.61103 106.807 8.22040 106.609 7.76207 106.609  c
7.31415 106.609 6.91832 106.817 6.57457 107.234  c
6.23082 107.651 6.05895 108.260 6.05895 109.062  c
h
15.8421 111.375 m
15.4463 111.708 15.0661 111.942 14.7015 112.078  c
14.3474 112.213 13.9619 112.281 13.5453 112.281  c
12.8578 112.281 12.3317 112.114 11.9671 111.781  c
11.6026 111.448 11.4203 111.020 11.4203 110.500  c
11.4203 110.198 11.4880 109.921 11.6234 109.671  c
11.7588 109.411 11.9411 109.208 12.1703 109.062  c
12.3994 108.906 12.6546 108.791 12.9359 108.718  c
13.1338 108.656 13.4463 108.599 13.8734 108.546  c
14.7171 108.453 15.3421 108.333 15.7484 108.187  c
15.7484 108.041 15.7484 107.953 15.7484 107.921  c
15.7484 107.484 15.6494 107.177 15.4515 107.000  c
15.1807 106.770 14.7796 106.656 14.2484 106.656  c
13.7588 106.656 13.3942 106.744 13.1546 106.921  c
12.9151 107.088 12.7380 107.390 12.6234 107.828  c
11.5921 107.687 l
11.6859 107.250 11.8421 106.895 12.0609 106.625  c
12.2796 106.354 12.5921 106.145 12.9984 106.000  c
13.4046 105.854 13.8734 105.781 14.4046 105.781  c
14.9359 105.781 15.3682 105.843 15.7015 105.968  c
16.0349 106.093 16.2796 106.250 16.4359 106.437  c
16.5921 106.625 16.7015 106.864 16.7640 107.156  c
16.7953 107.333 16.8109 107.656 16.8109 108.125  c
16.8109 109.531 l
16.8109 110.510 16.8317 111.130 16.8734 111.390  c
16.9255 111.651 17.0192 111.901 17.1546 112.140  c
16.0453 112.140 l
15.9411 111.921 15.8734 111.666 15.8421 111.375  c
h
15.7484 109.015 m
15.3630 109.171 14.7901 109.307 14.0296 109.421  c
13.5921 109.484 13.2849 109.557 13.1078 109.640  c
12.9307 109.713 12.7901 109.823 12.6859 109.968  c
12.5921 110.114 12.5453 110.281 12.5453 110.468  c
12.5453 110.750 12.6494 110.984 12.8578 111.171  c
13.0765 111.359 13.3890 111.453 13.7953 111.453  c
14.2015 111.453 14.5609 111.364 14.8734 111.187  c
15.1963 111.010 15.4307 110.765 15.5765 110.453  c
15.6911 110.213 15.7484 109.864 15.7484 109.406  c
15.7484 109.015 l
h
18.4222 112.140 m
18.4222 103.546 l
19.4847 103.546 l
19.4847 112.140 l
18.4222 112.140 l
h
22.7445 112.140 m
20.4632 103.546 l
21.6351 103.546 l
22.9476 109.187 l
23.0830 109.770 23.2028 110.354 23.3070 110.937  c
23.5257 110.020 23.6559 109.489 23.6976 109.343  c
25.3226 103.546 l
26.6976 103.546 l
27.9320 107.890 l
28.2341 108.974 28.4580 109.989 28.6039 110.937  c
28.7080 110.395 28.8487 109.770 29.0257 109.062  c
30.3695 103.546 l
31.5101 103.546 l
29.1664 112.140 l
28.0570 112.140 l
26.2601 105.593 l
26.1039 105.052 26.0101 104.718 25.9789 104.593  c
25.8955 104.979 25.8122 105.312 25.7289 105.593  c
23.9164 112.140 l
22.7445 112.140 l
h
32.4457 104.765 m
32.4457 103.546 l
33.5082 103.546 l
33.5082 104.765 l
32.4457 104.765 l
h
32.4457 112.140 m
32.4457 105.921 l
33.5082 105.921 l
33.5082 112.140 l
32.4457 112.140 l
h
39.1429 112.140 m
39.1429 111.359 l
38.7471 111.974 38.1690 112.281 37.4086 112.281  c
36.9086 112.281 36.4502 112.145 36.0336 111.875  c
35.6169 111.593 35.2940 111.208 35.0648 110.718  c
34.8356 110.229 34.7211 109.666 34.7211 109.031  c
34.7211 108.416 34.8252 107.854 35.0336 107.343  c
35.2419 106.833 35.5544 106.448 35.9711 106.187  c
36.3877 105.916 36.8513 105.781 37.3617 105.781  c
37.7367 105.781 38.0700 105.859 38.3617 106.015  c
38.6533 106.171 38.8929 106.375 39.0804 106.625  c
39.0804 103.546 l
40.1273 103.546 l
40.1273 112.140 l
39.1429 112.140 l
h
35.8148 109.031 m
35.8148 109.833 35.9815 110.432 36.3148 110.828  c
36.6481 111.213 37.0440 111.406 37.5023 111.406  c
37.9606 111.406 38.3513 111.218 38.6742 110.843  c
38.9971 110.468 39.1586 109.895 39.1586 109.125  c
39.1586 108.270 38.9919 107.645 38.6586 107.250  c
38.3356 106.854 37.9346 106.656 37.4554 106.656  c
36.9867 106.656 36.5961 106.849 36.2836 107.234  c
35.9711 107.609 35.8148 108.208 35.8148 109.031  c
h
44.0824 111.203 m
44.2386 112.125 l
43.9365 112.187 43.6709 112.218 43.4418 112.218  c
43.0563 112.218 42.7595 112.161 42.5511 112.046  c
42.3428 111.921 42.1918 111.760 42.0980 111.562  c
42.0147 111.364 41.9730 110.948 41.9730 110.312  c
41.9730 106.734 l
41.2074 106.734 l
41.2074 105.921 l
41.9730 105.921 l
41.9730 104.375 l
43.0199 103.750 l
43.0199 105.921 l
44.0824 105.921 l
44.0824 106.734 l
43.0199 106.734 l
43.0199 110.375 l
43.0199 110.677 43.0355 110.869 43.0668 110.953  c
43.1084 111.036 43.1709 111.104 43.2543 111.156  c
43.3376 111.208 43.4574 111.234 43.6136 111.234  c
43.7386 111.234 43.8949 111.224 44.0824 111.203  c
h
45.1195 112.140 m
45.1195 103.546 l
46.1664 103.546 l
46.1664 106.625 l
46.6559 106.062 47.2757 105.781 48.0257 105.781  c
48.4945 105.781 48.8955 105.875 49.2289 106.062  c
49.5726 106.239 49.8174 106.489 49.9632 106.812  c
50.1091 107.125 50.1820 107.588 50.1820 108.203  c
50.1820 112.140 l
49.1351 112.140 l
49.1351 108.203 l
49.1351 107.671 49.0205 107.286 48.7914 107.046  c
48.5622 106.807 48.2393 106.687 47.8226 106.687  c
47.5101 106.687 47.2132 106.770 46.9320 106.937  c
46.6612 107.093 46.4632 107.312 46.3382 107.593  c
46.2237 107.864 46.1664 108.244 46.1664 108.734  c
46.1664 112.140 l
45.1195 112.140 l
h
58.0589 109.125 m
59.1839 109.421 l
58.9444 110.349 58.5173 111.057 57.9027 111.546  c
57.2881 112.036 56.5329 112.281 55.6371 112.281  c
54.7100 112.281 53.9548 112.093 53.3714 111.718  c
52.7881 111.343 52.3454 110.802 52.0433 110.093  c
51.7412 109.375 51.5902 108.604 51.5902 107.781  c
51.5902 106.885 51.7621 106.104 52.1058 105.437  c
52.4496 104.770 52.9339 104.265 53.5589 103.921  c
54.1944 103.578 54.8923 103.406 55.6527 103.406  c
56.5069 103.406 57.2256 103.625 57.8089 104.062  c
58.4027 104.500 58.8142 105.114 59.0433 105.906  c
57.9183 106.171 l
57.7204 105.546 57.4287 105.093 57.0433 104.812  c
56.6683 104.520 56.1944 104.375 55.6214 104.375  c
54.9652 104.375 54.4131 104.536 53.9652 104.859  c
53.5277 105.171 53.2152 105.593 53.0277 106.125  c
52.8506 106.656 52.7621 107.208 52.7621 107.781  c
52.7621 108.510 52.8662 109.145 53.0746 109.687  c
53.2933 110.229 53.6267 110.635 54.0746 110.906  c
54.5225 111.177 55.0121 111.312 55.5433 111.312  c
56.1787 111.312 56.7152 111.130 57.1527 110.765  c
57.6006 110.401 57.9027 109.854 58.0589 109.125  c
h
60.4593 112.140 m
60.4593 105.921 l
61.3968 105.921 l
61.3968 106.796 l
61.5948 106.484 61.8552 106.239 62.1781 106.062  c
62.5010 105.875 62.8708 105.781 63.2875 105.781  c
63.7458 105.781 64.1208 105.875 64.4125 106.062  c
64.7145 106.250 64.9229 106.515 65.0375 106.859  c
65.5375 106.140 66.1781 105.781 66.9593 105.781  c
67.5843 105.781 68.0583 105.953 68.3812 106.296  c
68.7145 106.630 68.8812 107.156 68.8812 107.875  c
68.8812 112.140 l
67.8343 112.140 l
67.8343 108.218 l
67.8343 107.802 67.7979 107.500 67.7250 107.312  c
67.6625 107.125 67.5427 106.974 67.3656 106.859  c
67.1885 106.744 66.9750 106.687 66.7250 106.687  c
66.2875 106.687 65.9229 106.833 65.6312 107.125  c
65.3500 107.416 65.2093 107.885 65.2093 108.531  c
65.2093 112.140 l
64.1468 112.140 l
64.1468 108.093 l
64.1468 107.625 64.0583 107.276 63.8812 107.046  c
63.7145 106.807 63.4385 106.687 63.0531 106.687  c
62.7510 106.687 62.4750 106.765 62.2250 106.921  c
61.9750 107.078 61.7927 107.307 61.6781 107.609  c
61.5635 107.911 61.5062 108.343 61.5062 108.906  c
61.5062 112.140 l
60.4593 112.140 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
80.5727 45.4436 m
110.573 45.4436 l
110.573 75.4436 l
80.5727 75.4436 l
80.5727 45.4436 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
80.5727 45.4436 m
110.573 45.4436 l
110.573 75.4436 l
80.5727 75.4436 l
80.5727 45.4436 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
55.1362 65.1574 m
55.1362 56.5637 l
58.3862 56.5637 l
58.9487 56.5637 59.3810 56.5897 59.6831 56.6418  c
60.1101 56.7147 60.4643 56.8502 60.7456 57.0481  c
61.0372 57.2460 61.2664 57.5220 61.4331 57.8762  c
61.6101 58.2304 61.6987 58.6210 61.6987 59.0481  c
61.6987 59.7772 61.4643 60.3970 60.9956 60.9074  c
60.5372 61.4074 59.6987 61.6574 58.4799 61.6574  c
56.2768 61.6574 l
56.2768 65.1574 l
55.1362 65.1574 l
h
56.2768 60.6574 m
58.4956 60.6574 l
59.2351 60.6574 59.7560 60.5220 60.0581 60.2512  c
60.3706 59.9699 60.5268 59.5793 60.5268 59.0793  c
60.5268 58.7252 60.4331 58.4231 60.2456 58.1731  c
60.0685 57.9127 59.8341 57.7408 59.5424 57.6574  c
59.3445 57.6054 58.9904 57.5793 58.4799 57.5793  c
56.2768 57.5793 l
56.2768 60.6574 l
h
67.2651 63.1574 m
68.3588 63.2824 l
68.1922 63.9179 67.8745 64.4127 67.4057 64.7668  c
66.9370 65.1210 66.3432 65.2981 65.6245 65.2981  c
64.7182 65.2981 63.9943 65.0168 63.4526 64.4543  c
62.9213 63.8918 62.6557 63.1054 62.6557 62.0949  c
62.6557 61.0533 62.9266 60.2460 63.4682 59.6731  c
64.0099 59.0897 64.7078 58.7981 65.5620 58.7981  c
66.3953 58.7981 67.0724 59.0793 67.5932 59.6418  c
68.1245 60.2043 68.3901 61.0012 68.3901 62.0324  c
68.3901 62.0949 68.3901 62.1887 68.3901 62.3137  c
63.7495 62.3137 l
63.7911 63.0012 63.9838 63.5272 64.3276 63.8918  c
64.6713 64.2460 65.1036 64.4231 65.6245 64.4231  c
66.0099 64.4231 66.3380 64.3241 66.6088 64.1262  c
66.8901 63.9179 67.1088 63.5949 67.2651 63.1574  c
h
63.8120 61.4543 m
67.2807 61.4543 l
67.2390 60.9231 67.1088 60.5272 66.8901 60.2668  c
66.5463 59.8606 66.1088 59.6574 65.5776 59.6574  c
65.0880 59.6574 64.6765 59.8189 64.3432 60.1418  c
64.0203 60.4647 63.8432 60.9022 63.8120 61.4543  c
h
71.9858 64.2199 m
72.1420 65.1418 l
71.8400 65.2043 71.5743 65.2356 71.3452 65.2356  c
70.9598 65.2356 70.6629 65.1783 70.4545 65.0637  c
70.2462 64.9387 70.0952 64.7772 70.0014 64.5793  c
69.9181 64.3814 69.8764 63.9647 69.8764 63.3293  c
69.8764 59.7512 l
69.1108 59.7512 l
69.1108 58.9387 l
69.8764 58.9387 l
69.8764 57.3918 l
70.9233 56.7668 l
70.9233 58.9387 l
71.9858 58.9387 l
71.9858 59.7512 l
70.9233 59.7512 l
70.9233 63.3918 l
70.9233 63.6939 70.9389 63.8866 70.9702 63.9699  c
71.0118 64.0533 71.0743 64.1210 71.1577 64.1731  c
71.2410 64.2252 71.3608 64.2512 71.5170 64.2512  c
71.6420 64.2512 71.7983 64.2408 71.9858 64.2199  c
h
77.0854 64.3918 m
76.6896 64.7252 76.3094 64.9595 75.9448 65.0949  c
75.5906 65.2304 75.2052 65.2981 74.7885 65.2981  c
74.1010 65.2981 73.5750 65.1314 73.2104 64.7981  c
72.8458 64.4647 72.6635 64.0377 72.6635 63.5168  c
72.6635 63.2147 72.7312 62.9387 72.8667 62.6887  c
73.0021 62.4283 73.1844 62.2252 73.4135 62.0793  c
73.6427 61.9231 73.8979 61.8085 74.1792 61.7356  c
74.3771 61.6731 74.6896 61.6158 75.1167 61.5637  c
75.9604 61.4699 76.5854 61.3502 76.9917 61.2043  c
76.9917 61.0585 76.9917 60.9699 76.9917 60.9387  c
76.9917 60.5012 76.8927 60.1939 76.6948 60.0168  c
76.4239 59.7877 76.0229 59.6731 75.4917 59.6731  c
75.0021 59.6731 74.6375 59.7616 74.3979 59.9387  c
74.1583 60.1054 73.9812 60.4074 73.8667 60.8449  c
72.8354 60.7043 l
72.9292 60.2668 73.0854 59.9127 73.3042 59.6418  c
73.5229 59.3710 73.8354 59.1627 74.2417 59.0168  c
74.6479 58.8710 75.1167 58.7981 75.6479 58.7981  c
76.1792 58.7981 76.6114 58.8606 76.9448 58.9856  c
77.2781 59.1106 77.5229 59.2668 77.6792 59.4543  c
77.8354 59.6418 77.9448 59.8814 78.0073 60.1731  c
78.0385 60.3502 78.0542 60.6731 78.0542 61.1418  c
78.0542 62.5481 l
78.0542 63.5272 78.0750 64.1470 78.1167 64.4074  c
78.1687 64.6679 78.2625 64.9179 78.3979 65.1574  c
77.2885 65.1574 l
77.1844 64.9387 77.1167 64.6835 77.0854 64.3918  c
h
76.9917 62.0324 m
76.6062 62.1887 76.0333 62.3241 75.2729 62.4387  c
74.8354 62.5012 74.5281 62.5741 74.3510 62.6574  c
74.1739 62.7304 74.0333 62.8397 73.9292 62.9856  c
73.8354 63.1314 73.7885 63.2981 73.7885 63.4856  c
73.7885 63.7668 73.8927 64.0012 74.1010 64.1887  c
74.3198 64.3762 74.6323 64.4699 75.0385 64.4699  c
75.4448 64.4699 75.8042 64.3814 76.1167 64.2043  c
76.4396 64.0272 76.6739 63.7824 76.8198 63.4699  c
76.9344 63.2304 76.9917 62.8814 76.9917 62.4231  c
76.9917 62.0324 l
h
79.6655 65.1574 m
79.6655 56.5637 l
80.7280 56.5637 l
80.7280 65.1574 l
79.6655 65.1574 l
h
82.4409 65.1574 m
82.4409 56.5637 l
83.5815 56.5637 l
83.5815 64.1418 l
87.8159 64.1418 l
87.8159 65.1574 l
82.4409 65.1574 l
h
93.2866 63.1574 m
94.3803 63.2824 l
94.2137 63.9179 93.8960 64.4127 93.4272 64.7668  c
92.9585 65.1210 92.3647 65.2981 91.6460 65.2981  c
90.7397 65.2981 90.0157 65.0168 89.4741 64.4543  c
88.9428 63.8918 88.6772 63.1054 88.6772 62.0949  c
88.6772 61.0533 88.9480 60.2460 89.4897 59.6731  c
90.0314 59.0897 90.7293 58.7981 91.5835 58.7981  c
92.4168 58.7981 93.0939 59.0793 93.6147 59.6418  c
94.1460 60.2043 94.4116 61.0012 94.4116 62.0324  c
94.4116 62.0949 94.4116 62.1887 94.4116 62.3137  c
89.7710 62.3137 l
89.8126 63.0012 90.0053 63.5272 90.3491 63.8918  c
90.6928 64.2460 91.1251 64.4231 91.6460 64.4231  c
92.0314 64.4231 92.3595 64.3241 92.6303 64.1262  c
92.9116 63.9179 93.1303 63.5949 93.2866 63.1574  c
h
89.8335 61.4543 m
93.3022 61.4543 l
93.2605 60.9231 93.1303 60.5272 92.9116 60.2668  c
92.5678 59.8606 92.1303 59.6574 91.5991 59.6574  c
91.1095 59.6574 90.6980 59.8189 90.3647 60.1418  c
90.0418 60.4647 89.8647 60.9022 89.8335 61.4543  c
h
95.7104 65.1574 m
95.7104 58.9387 l
96.6479 58.9387 l
96.6479 59.8137 l
97.1062 59.1366 97.7677 58.7981 98.6323 58.7981  c
99.0073 58.7981 99.3510 58.8658 99.6635 59.0012  c
99.9864 59.1366 100.226 59.3137 100.382 59.5324  c
100.539 59.7512 100.648 60.0064 100.710 60.2981  c
100.742 60.4960 100.757 60.8397 100.757 61.3293  c
100.757 65.1574 l
99.7104 65.1574 l
99.7104 61.3762 l
99.7104 60.9387 99.6687 60.6158 99.5854 60.4074  c
99.5021 60.1991 99.3562 60.0324 99.1479 59.9074  c
98.9396 59.7720 98.6948 59.7043 98.4135 59.7043  c
97.9656 59.7043 97.5750 59.8502 97.2417 60.1418  c
96.9187 60.4231 96.7573 60.9595 96.7573 61.7512  c
96.7573 65.1574 l
95.7104 65.1574 l
h
102.181 65.6731 m
103.212 65.8293 l
103.254 66.1418 103.374 66.3710 103.572 66.5168  c
103.832 66.7147 104.186 66.8137 104.634 66.8137  c
105.124 66.8137 105.499 66.7147 105.759 66.5168  c
106.030 66.3189 106.212 66.0481 106.306 65.7043  c
106.369 65.4856 106.395 65.0324 106.384 64.3449  c
105.926 64.8866 105.353 65.1574 104.665 65.1574  c
103.811 65.1574 103.150 64.8502 102.681 64.2356  c
102.212 63.6106 101.978 62.8710 101.978 62.0168  c
101.978 61.4231 102.082 60.8762 102.290 60.3762  c
102.509 59.8658 102.822 59.4752 103.228 59.2043  c
103.634 58.9335 104.113 58.7981 104.665 58.7981  c
105.405 58.7981 106.014 59.0949 106.494 59.6887  c
106.494 58.9387 l
107.462 58.9387 l
107.462 64.3137 l
107.462 65.2824 107.363 65.9699 107.165 66.3762  c
106.968 66.7824 106.655 67.1002 106.228 67.3293  c
105.801 67.5689 105.275 67.6887 104.650 67.6887  c
103.910 67.6887 103.311 67.5220 102.853 67.1887  c
102.395 66.8554 102.171 66.3502 102.181 65.6731  c
h
103.056 61.9387 m
103.056 62.7512 103.218 63.3449 103.540 63.7199  c
103.863 64.0949 104.270 64.2824 104.759 64.2824  c
105.249 64.2824 105.655 64.0949 105.978 63.7199  c
106.311 63.3449 106.478 62.7616 106.478 61.9699  c
106.478 61.2095 106.306 60.6366 105.962 60.2512  c
105.629 59.8658 105.223 59.6731 104.744 59.6731  c
104.275 59.6731 103.874 59.8658 103.540 60.2512  c
103.218 60.6262 103.056 61.1887 103.056 61.9387  c
h
111.355 64.2199 m
111.511 65.1418 l
111.209 65.2043 110.943 65.2356 110.714 65.2356  c
110.329 65.2356 110.032 65.1783 109.824 65.0637  c
109.615 64.9387 109.464 64.7772 109.371 64.5793  c
109.287 64.3814 109.246 63.9647 109.246 63.3293  c
109.246 59.7512 l
108.480 59.7512 l
108.480 58.9387 l
109.246 58.9387 l
109.246 57.3918 l
110.292 56.7668 l
110.292 58.9387 l
111.355 58.9387 l
111.355 59.7512 l
110.292 59.7512 l
110.292 63.3918 l
110.292 63.6939 110.308 63.8866 110.339 63.9699  c
110.381 64.0533 110.443 64.1210 110.527 64.1731  c
110.610 64.2252 110.730 64.2512 110.886 64.2512  c
111.011 64.2512 111.167 64.2408 111.355 64.2199  c
h
112.392 65.1574 m
112.392 56.5637 l
113.439 56.5637 l
113.439 59.6418 l
113.929 59.0793 114.548 58.7981 115.298 58.7981  c
115.767 58.7981 116.168 58.8918 116.501 59.0793  c
116.845 59.2564 117.090 59.5064 117.236 59.8293  c
117.382 60.1418 117.455 60.6054 117.455 61.2199  c
117.455 65.1574 l
116.408 65.1574 l
116.408 61.2199 l
116.408 60.6887 116.293 60.3033 116.064 60.0637  c
115.835 59.8241 115.512 59.7043 115.095 59.7043  c
114.783 59.7043 114.486 59.7877 114.205 59.9543  c
113.934 60.1106 113.736 60.3293 113.611 60.6106  c
113.496 60.8814 113.439 61.2616 113.439 61.7512  c
113.439 65.1574 l
112.392 65.1574 l
h
125.331 62.1418 m
126.456 62.4387 l
126.217 63.3658 125.790 64.0741 125.175 64.5637  c
124.561 65.0533 123.805 65.2981 122.910 65.2981  c
121.983 65.2981 121.227 65.1106 120.644 64.7356  c
120.061 64.3606 119.618 63.8189 119.316 63.1106  c
119.014 62.3918 118.863 61.6210 118.863 60.7981  c
118.863 59.9022 119.035 59.1210 119.378 58.4543  c
119.722 57.7877 120.206 57.2824 120.831 56.9387  c
121.467 56.5949 122.165 56.4231 122.925 56.4231  c
123.779 56.4231 124.498 56.6418 125.081 57.0793  c
125.675 57.5168 126.087 58.1314 126.316 58.9231  c
125.191 59.1887 l
124.993 58.5637 124.701 58.1106 124.316 57.8293  c
123.941 57.5377 123.467 57.3918 122.894 57.3918  c
122.238 57.3918 121.686 57.5533 121.238 57.8762  c
120.800 58.1887 120.488 58.6106 120.300 59.1418  c
120.123 59.6731 120.035 60.2252 120.035 60.7981  c
120.035 61.5272 120.139 62.1627 120.347 62.7043  c
120.566 63.2460 120.899 63.6522 121.347 63.9231  c
121.795 64.1939 122.285 64.3293 122.816 64.3293  c
123.451 64.3293 123.988 64.1470 124.425 63.7824  c
124.873 63.4179 125.175 62.8710 125.331 62.1418  c
h
127.732 65.1574 m
127.732 58.9387 l
128.669 58.9387 l
128.669 59.8137 l
128.867 59.5012 129.128 59.2564 129.451 59.0793  c
129.774 58.8918 130.143 58.7981 130.560 58.7981  c
131.018 58.7981 131.393 58.8918 131.685 59.0793  c
131.987 59.2668 132.195 59.5324 132.310 59.8762  c
132.810 59.1574 133.451 58.7981 134.232 58.7981  c
134.857 58.7981 135.331 58.9699 135.654 59.3137  c
135.987 59.6470 136.154 60.1731 136.154 60.8918  c
136.154 65.1574 l
135.107 65.1574 l
135.107 61.2356 l
135.107 60.8189 135.070 60.5168 134.998 60.3293  c
134.935 60.1418 134.815 59.9908 134.638 59.8762  c
134.461 59.7616 134.248 59.7043 133.998 59.7043  c
133.560 59.7043 133.195 59.8502 132.904 60.1418  c
132.623 60.4335 132.482 60.9022 132.482 61.5481  c
132.482 65.1574 l
131.419 65.1574 l
131.419 61.1106 l
131.419 60.6418 131.331 60.2929 131.154 60.0637  c
130.987 59.8241 130.711 59.7043 130.326 59.7043  c
130.024 59.7043 129.748 59.7824 129.498 59.9387  c
129.248 60.0949 129.065 60.3241 128.951 60.6262  c
128.836 60.9283 128.779 61.3606 128.779 61.9231  c
128.779 65.1574 l
127.732 65.1574 l
h
f
2 J
10.0000 M
1.00000 .800000 0.00000 RG
newpath
0.00000 0.00000 m
30.0000 0.00000 l
30.0000 30.0000 l
0.00000 30.0000 l
0.00000 0.00000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
0.00000 0.00000 m
30.0000 0.00000 l
30.0000 30.0000 l
0.00000 30.0000 l
0.00000 0.00000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-22.4219 19.7139 m
-22.4219 11.1201 l
-19.1719 11.1201 l
-18.6094 11.1201 -18.1771 11.1462 -17.8750 11.1982  c
-17.4479 11.2712 -17.0938 11.4066 -16.8125 11.6045  c
-16.5208 11.8024 -16.2917 12.0785 -16.1250 12.4326  c
-15.9479 12.7868 -15.8594 13.1774 -15.8594 13.6045  c
-15.8594 14.3337 -16.0938 14.9535 -16.5625 15.4639  c
-17.0208 15.9639 -17.8594 16.2139 -19.0781 16.2139  c
-21.2812 16.2139 l
-21.2812 19.7139 l
-22.4219 19.7139 l
h
-21.2812 15.2139 m
-19.0625 15.2139 l
-18.3229 15.2139 -17.8021 15.0785 -17.5000 14.8076  c
-17.1875 14.5264 -17.0312 14.1357 -17.0312 13.6357  c
-17.0312 13.2816 -17.1250 12.9795 -17.3125 12.7295  c
-17.4896 12.4691 -17.7240 12.2972 -18.0156 12.2139  c
-18.2135 12.1618 -18.5677 12.1357 -19.0781 12.1357  c
-21.2812 12.1357 l
-21.2812 15.2139 l
h
-10.2930 17.7139 m
-9.19922 17.8389 l
-9.36589 18.4743 -9.68359 18.9691 -10.1523 19.3232  c
-10.6211 19.6774 -11.2148 19.8545 -11.9336 19.8545  c
-12.8398 19.8545 -13.5638 19.5732 -14.1055 19.0107  c
-14.6367 18.4482 -14.9023 17.6618 -14.9023 16.6514  c
-14.9023 15.6097 -14.6315 14.8024 -14.0898 14.2295  c
-13.5482 13.6462 -12.8503 13.3545 -11.9961 13.3545  c
-11.1628 13.3545 -10.4857 13.6357 -9.96484 14.1982  c
-9.43359 14.7607 -9.16797 15.5576 -9.16797 16.5889  c
-9.16797 16.6514 -9.16797 16.7451 -9.16797 16.8701  c
-13.8086 16.8701 l
-13.7669 17.5576 -13.5742 18.0837 -13.2305 18.4482  c
-12.8867 18.8024 -12.4544 18.9795 -11.9336 18.9795  c
-11.5482 18.9795 -11.2201 18.8805 -10.9492 18.6826  c
-10.6680 18.4743 -10.4492 18.1514 -10.2930 17.7139  c
h
-13.7461 16.0107 m
-10.2773 16.0107 l
-10.3190 15.4795 -10.4492 15.0837 -10.6680 14.8232  c
-11.0117 14.4170 -11.4492 14.2139 -11.9805 14.2139  c
-12.4701 14.2139 -12.8815 14.3753 -13.2148 14.6982  c
-13.5378 15.0212 -13.7148 15.4587 -13.7461 16.0107  c
h
-5.57227 18.7764 m
-5.41602 19.6982 l
-5.71810 19.7607 -5.98372 19.7920 -6.21289 19.7920  c
-6.59831 19.7920 -6.89518 19.7347 -7.10352 19.6201  c
-7.31185 19.4951 -7.46289 19.3337 -7.55664 19.1357  c
-7.63997 18.9378 -7.68164 18.5212 -7.68164 17.8857  c
-7.68164 14.3076 l
-8.44727 14.3076 l
-8.44727 13.4951 l
-7.68164 13.4951 l
-7.68164 11.9482 l
-6.63477 11.3232 l
-6.63477 13.4951 l
-5.57227 13.4951 l
-5.57227 14.3076 l
-6.63477 14.3076 l
-6.63477 17.9482 l
-6.63477 18.2503 -6.61914 18.4430 -6.58789 18.5264  c
-6.54622 18.6097 -6.48372 18.6774 -6.40039 18.7295  c
-6.31706 18.7816 -6.19727 18.8076 -6.04102 18.8076  c
-5.91602 18.8076 -5.75977 18.7972 -5.57227 18.7764  c
h
-.472656 18.9482 m
-.868490 19.2816 -1.24870 19.5160 -1.61328 19.6514  c
-1.96745 19.7868 -2.35286 19.8545 -2.76953 19.8545  c
-3.45703 19.8545 -3.98307 19.6878 -4.34766 19.3545  c
-4.71224 19.0212 -4.89453 18.5941 -4.89453 18.0732  c
-4.89453 17.7712 -4.82682 17.4951 -4.69141 17.2451  c
-4.55599 16.9847 -4.37370 16.7816 -4.14453 16.6357  c
-3.91536 16.4795 -3.66016 16.3649 -3.37891 16.2920  c
-3.18099 16.2295 -2.86849 16.1722 -2.44141 16.1201  c
-1.59766 16.0264 -.972656 15.9066 -.566406 15.7607  c
-.566406 15.6149 -.566406 15.5264 -.566406 15.4951  c
-.566406 15.0576 -.665365 14.7503 -.863281 14.5732  c
-1.13411 14.3441 -1.53516 14.2295 -2.06641 14.2295  c
-2.55599 14.2295 -2.92057 14.3180 -3.16016 14.4951  c
-3.39974 14.6618 -3.57682 14.9639 -3.69141 15.4014  c
-4.72266 15.2607 l
-4.62891 14.8232 -4.47266 14.4691 -4.25391 14.1982  c
-4.03516 13.9274 -3.72266 13.7191 -3.31641 13.5732  c
-2.91016 13.4274 -2.44141 13.3545 -1.91016 13.3545  c
-1.37891 13.3545 -.946615 13.4170 -.613281 13.5420  c
-.279948 13.6670 -.0351562 13.8232 .121094 14.0107  c
.277344 14.1982 .386719 14.4378 .449219 14.7295  c
.480469 14.9066 .496094 15.2295 .496094 15.6982  c
.496094 17.1045 l
.496094 18.0837 .516927 18.7035 .558594 18.9639  c
.610677 19.2243 .704427 19.4743 .839844 19.7139  c
-.269531 19.7139 l
-.373698 19.4951 -.441406 19.2399 -.472656 18.9482  c
h
-.566406 16.5889 m
-.951823 16.7451 -1.52474 16.8805 -2.28516 16.9951  c
-2.72266 17.0576 -3.02995 17.1305 -3.20703 17.2139  c
-3.38411 17.2868 -3.52474 17.3962 -3.62891 17.5420  c
-3.72266 17.6878 -3.76953 17.8545 -3.76953 18.0420  c
-3.76953 18.3232 -3.66536 18.5576 -3.45703 18.7451  c
-3.23828 18.9326 -2.92578 19.0264 -2.51953 19.0264  c
-2.11328 19.0264 -1.75391 18.9378 -1.44141 18.7607  c
-1.11849 18.5837 -.884115 18.3389 -.738281 18.0264  c
-.623698 17.7868 -.566406 17.4378 -.566406 16.9795  c
-.566406 16.5889 l
h
2.10742 19.7139 m
2.10742 11.1201 l
3.16992 11.1201 l
3.16992 19.7139 l
2.10742 19.7139 l
h
6.42969 19.7139 m
4.14844 11.1201 l
5.32031 11.1201 l
6.63281 16.7607 l
6.76823 17.3441 6.88802 17.9274 6.99219 18.5107  c
7.21094 17.5941 7.34115 17.0628 7.38281 16.9170  c
9.00781 11.1201 l
10.3828 11.1201 l
11.6172 15.4639 l
11.9193 16.5472 12.1432 17.5628 12.2891 18.5107  c
12.3932 17.9691 12.5339 17.3441 12.7109 16.6357  c
14.0547 11.1201 l
15.1953 11.1201 l
12.8516 19.7139 l
11.7422 19.7139 l
9.94531 13.1670 l
9.78906 12.6253 9.69531 12.2920 9.66406 12.1670  c
9.58073 12.5524 9.49740 12.8857 9.41406 13.1670  c
7.60156 19.7139 l
6.42969 19.7139 l
h
16.1309 12.3389 m
16.1309 11.1201 l
17.1934 11.1201 l
17.1934 12.3389 l
16.1309 12.3389 l
h
16.1309 19.7139 m
16.1309 13.4951 l
17.1934 13.4951 l
17.1934 19.7139 l
16.1309 19.7139 l
h
22.8281 19.7139 m
22.8281 18.9326 l
22.4323 19.5472 21.8542 19.8545 21.0938 19.8545  c
20.5938 19.8545 20.1354 19.7191 19.7188 19.4482  c
19.3021 19.1670 18.9792 18.7816 18.7500 18.2920  c
18.5208 17.8024 18.4062 17.2399 18.4062 16.6045  c
18.4062 15.9899 18.5104 15.4274 18.7188 14.9170  c
18.9271 14.4066 19.2396 14.0212 19.6562 13.7607  c
20.0729 13.4899 20.5365 13.3545 21.0469 13.3545  c
21.4219 13.3545 21.7552 13.4326 22.0469 13.5889  c
22.3385 13.7451 22.5781 13.9482 22.7656 14.1982  c
22.7656 11.1201 l
23.8125 11.1201 l
23.8125 19.7139 l
22.8281 19.7139 l
h
19.5000 16.6045 m
19.5000 17.4066 19.6667 18.0055 20.0000 18.4014  c
20.3333 18.7868 20.7292 18.9795 21.1875 18.9795  c
21.6458 18.9795 22.0365 18.7920 22.3594 18.4170  c
22.6823 18.0420 22.8438 17.4691 22.8438 16.6982  c
22.8438 15.8441 22.6771 15.2191 22.3438 14.8232  c
22.0208 14.4274 21.6198 14.2295 21.1406 14.2295  c
20.6719 14.2295 20.2812 14.4222 19.9688 14.8076  c
19.6562 15.1826 19.5000 15.7816 19.5000 16.6045  c
h
27.7676 18.7764 m
27.9238 19.6982 l
27.6217 19.7607 27.3561 19.7920 27.1270 19.7920  c
26.7415 19.7920 26.4447 19.7347 26.2363 19.6201  c
26.0280 19.4951 25.8770 19.3337 25.7832 19.1357  c
25.6999 18.9378 25.6582 18.5212 25.6582 17.8857  c
25.6582 14.3076 l
24.8926 14.3076 l
24.8926 13.4951 l
25.6582 13.4951 l
25.6582 11.9482 l
26.7051 11.3232 l
26.7051 13.4951 l
27.7676 13.4951 l
27.7676 14.3076 l
26.7051 14.3076 l
26.7051 17.9482 l
26.7051 18.2503 26.7207 18.4430 26.7520 18.5264  c
26.7936 18.6097 26.8561 18.6774 26.9395 18.7295  c
27.0228 18.7816 27.1426 18.8076 27.2988 18.8076  c
27.4238 18.8076 27.5801 18.7972 27.7676 18.7764  c
h
28.8047 19.7139 m
28.8047 11.1201 l
29.8516 11.1201 l
29.8516 14.1982 l
30.3411 13.6357 30.9609 13.3545 31.7109 13.3545  c
32.1797 13.3545 32.5807 13.4482 32.9141 13.6357  c
33.2578 13.8128 33.5026 14.0628 33.6484 14.3857  c
33.7943 14.6982 33.8672 15.1618 33.8672 15.7764  c
33.8672 19.7139 l
32.8203 19.7139 l
32.8203 15.7764 l
32.8203 15.2451 32.7057 14.8597 32.4766 14.6201  c
32.2474 14.3805 31.9245 14.2607 31.5078 14.2607  c
31.1953 14.2607 30.8984 14.3441 30.6172 14.5107  c
30.3464 14.6670 30.1484 14.8857 30.0234 15.1670  c
29.9089 15.4378 29.8516 15.8180 29.8516 16.3076  c
29.8516 19.7139 l
28.8047 19.7139 l
h
41.7441 16.6982 m
42.8691 16.9951 l
42.6296 17.9222 42.2025 18.6305 41.5879 19.1201  c
40.9733 19.6097 40.2181 19.8545 39.3223 19.8545  c
38.3952 19.8545 37.6400 19.6670 37.0566 19.2920  c
36.4733 18.9170 36.0306 18.3753 35.7285 17.6670  c
35.4264 16.9482 35.2754 16.1774 35.2754 15.3545  c
35.2754 14.4587 35.4473 13.6774 35.7910 13.0107  c
36.1348 12.3441 36.6191 11.8389 37.2441 11.4951  c
37.8796 11.1514 38.5775 10.9795 39.3379 10.9795  c
40.1921 10.9795 40.9108 11.1982 41.4941 11.6357  c
42.0879 12.0732 42.4993 12.6878 42.7285 13.4795  c
41.6035 13.7451 l
41.4056 13.1201 41.1139 12.6670 40.7285 12.3857  c
40.3535 12.0941 39.8796 11.9482 39.3066 11.9482  c
38.6504 11.9482 38.0983 12.1097 37.6504 12.4326  c
37.2129 12.7451 36.9004 13.1670 36.7129 13.6982  c
36.5358 14.2295 36.4473 14.7816 36.4473 15.3545  c
36.4473 16.0837 36.5514 16.7191 36.7598 17.2607  c
36.9785 17.8024 37.3118 18.2087 37.7598 18.4795  c
38.2077 18.7503 38.6973 18.8857 39.2285 18.8857  c
39.8639 18.8857 40.4004 18.7035 40.8379 18.3389  c
41.2858 17.9743 41.5879 17.4274 41.7441 16.6982  c
h
44.1445 19.7139 m
44.1445 13.4951 l
45.0820 13.4951 l
45.0820 14.3701 l
45.2799 14.0576 45.5404 13.8128 45.8633 13.6357  c
46.1862 13.4482 46.5560 13.3545 46.9727 13.3545  c
47.4310 13.3545 47.8060 13.4482 48.0977 13.6357  c
48.3997 13.8232 48.6081 14.0889 48.7227 14.4326  c
49.2227 13.7139 49.8633 13.3545 50.6445 13.3545  c
51.2695 13.3545 51.7435 13.5264 52.0664 13.8701  c
52.3997 14.2035 52.5664 14.7295 52.5664 15.4482  c
52.5664 19.7139 l
51.5195 19.7139 l
51.5195 15.7920 l
51.5195 15.3753 51.4831 15.0732 51.4102 14.8857  c
51.3477 14.6982 51.2279 14.5472 51.0508 14.4326  c
50.8737 14.3180 50.6602 14.2607 50.4102 14.2607  c
49.9727 14.2607 49.6081 14.4066 49.3164 14.6982  c
49.0352 14.9899 48.8945 15.4587 48.8945 16.1045  c
48.8945 19.7139 l
47.8320 19.7139 l
47.8320 15.6670 l
47.8320 15.1982 47.7435 14.8493 47.5664 14.6201  c
47.3997 14.3805 47.1237 14.2607 46.7383 14.2607  c
46.4362 14.2607 46.1602 14.3389 45.9102 14.4951  c
45.6602 14.6514 45.4779 14.8805 45.3633 15.1826  c
45.2487 15.4847 45.1914 15.9170 45.1914 16.4795  c
45.1914 19.7139 l
44.1445 19.7139 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
101.424 145.060 m
44.6449 115.291 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
113.042 137.924 m
98.9547 75.4436 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
44.6449 96.7368 m
80.5727 71.1332 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
27.2681 92.4264 m
17.3767 30.0000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
80.5727 51.9835 m
30.0000 23.4601 l
S
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
